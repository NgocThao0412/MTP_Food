function showToast(status, title, message) {
    // L∆∞u √Ω: ƒê·∫£m b·∫£o c√≥ m·ªôt element v·ªõi ID l√† 'successToast' trong HTML
    const toast = document.getElementById('successToast');

    if (!toast) {
        console.error("L·ªói: Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ Toast Notification (ID: successToast).");
        alert(`${title}: ${message}`); // D√πng alert d·ª± ph√≤ng n·∫øu kh√¥ng t√¨m th·∫•y Toast HTML
        return;
    }

    const toastTitle = toast.querySelector('.toast-title');
    const toastMessage = toast.querySelector('.toast-message');
    const toastIcon = toast.querySelector('.toast-icon');

    // 1. C·∫≠p nh·∫≠t n·ªôi dung v√† ki·ªÉu d√°ng
    if (toastTitle) toastTitle.textContent = title;
    if (toastMessage) toastMessage.textContent = message;

    // Reset c√°c class v√† style
    toast.classList.remove('success-toast', 'error-toast', 'show');
    if (toastIcon) toastIcon.classList.remove('fa-check-circle', 'fa-times-circle');

    // ƒê·∫∑t ki·ªÉu d√°ng v√† icon theo status
    if (status === 'success') {
        toast.classList.add('success-toast');
        if (toastIcon) {
            toastIcon.classList.add('fa-check-circle');
            toastIcon.style.color = '#2ecc71';
            toast.style.borderLeftColor = '#2ecc71';
        }
    } else if (status === 'error') {
        toast.classList.add('error-toast');
        if (toastIcon) {
            toastIcon.classList.add('fa-times-circle');
            toastIcon.style.color = '#e74c3c';
            toast.style.borderLeftColor = '#e74c3c';
        }
    }

    // 2. Hi·ªÉn th·ªã Toast
    toast.style.display = 'flex';

    // 3. K√≠ch ho·∫°t animation tr∆∞·ª£t v√†o
    setTimeout(() => {
        toast.classList.add('show');
    }, 10);

    // 4. T·ª± ƒë·ªông ·∫©n sau 4 gi√¢y
    setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => {
            toast.style.display = 'none';
        }, 300); // ƒê·ª£i animation ·∫©n ho√†n t·∫•t
    }, 4000);
}

// H√†m ƒë·ªãnh d·∫°ng ti·ªÅn t·ªá (S·ª≠ d·ª•ng chung)
function formatCurrency(amount) {
    return amount.toLocaleString('vi-VN') + ' ƒë';
}


document.addEventListener('DOMContentLoaded', function () {
    // ======================================================
    // üí∞ KHAI B√ÅO GI√Å TR·ªä V√Ä PH·∫¶N T·ª¨ C·∫¶N THAO T√ÅC
    // ======================================================
    const SUB_TOTAL = 319000;   // Ti·ªÅn h√†ng (L·∫©u Th√°i)
    const SHIPPING_FEE = 30000; // Ph√≠ v·∫≠n chuy·ªÉn
    
    // L·∫•y c√°c ph·∫ßn t·ª≠ HTML c·∫ßn d√πng
    const deliveryOptions = document.querySelectorAll('input[name="delivery_option"]');
    const shippingFeeArea = document.getElementById('shipping_fee_area');
    const deliveryDateArea = document.getElementById('delivery_date_area');
    const deliveryDateInput = document.getElementById("delivery_date");
    const pickupLocationArea = document.getElementById('pickup_location_area');
    const totalPriceDisplay = document.querySelector('.total-price'); // Ph·∫ßn t·ª≠ hi·ªÉn th·ªã T·ªïng ti·ªÅn
    const btn = document.querySelector('.submit-btn');

    // ======================================================
    // üöö X·ª¨ L√ù H√åNH TH·ª®C GIAO H√ÄNG (QUAN TR·ªåNG: T√çNH L·∫†I T·ªîNG TI·ªÄN)
    // ======================================================
    function handleDeliveryOptionChange() {
        const selectedOption = document.querySelector('input[name="delivery_option"]:checked').value;
        let newTotalPrice = SUB_TOTAL; // Gi√° tr·ªã ban ƒë·∫ßu l√† ti·ªÅn h√†ng

        if (selectedOption === 'pickup') {
            // T·ª∞ ƒê·∫æN L·∫§Y
            shippingFeeArea.style.display = 'none'; // ·∫®n ph√≠ v·∫≠n chuy·ªÉn
            deliveryDateArea.style.display = 'none'; // ·∫®n ng√†y giao h√†ng (v√¨ l√† l·∫•y t·∫°i chi nh√°nh)
            deliveryDateInput.removeAttribute('required');
            pickupLocationArea.style.display = 'block';
            
            // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn: Ti·ªÅn h√†ng + 0
            newTotalPrice = SUB_TOTAL; 
        } else if (selectedOption === 'ship') {
            // GIAO T·∫¨N N∆†I
            shippingFeeArea.style.display = 'flex'; // Hi·ªÉn th·ªã ph√≠ v·∫≠n chuy·ªÉn
            deliveryDateArea.style.display = 'block';
            deliveryDateInput.setAttribute('required', 'required');
            pickupLocationArea.style.display = 'none';
            
            // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn: Ti·ªÅn h√†ng + Ph√≠ v·∫≠n chuy·ªÉn
            newTotalPrice = SUB_TOTAL + SHIPPING_FEE;
        }
        
        // C·∫¨P NH·∫¨T T·ªîNG TI·ªÄN V√ÄO GIAO DI·ªÜN
        if (totalPriceDisplay) {
            totalPriceDisplay.textContent = formatCurrency(newTotalPrice);
        }
    }
    
    // G·∫Øn h√†m ra global scope (cho onclick trong HTML g·ªçi ƒë∆∞·ª£c)
    window.handleDeliveryOptionChange = handleDeliveryOptionChange;

    // ---------------------------
    // Kh·ªüi t·∫°o v√† S·ª± ki·ªán thay ƒë·ªïi h√¨nh th·ª©c giao h√†ng
    // ---------------------------
    deliveryOptions.forEach(radio => {
        radio.addEventListener('change', handleDeliveryOptionChange);
    });
    // Ch·∫°y l·∫ßn ƒë·∫ßu ƒë·ªÉ thi·∫øt l·∫≠p tr·∫°ng th√°i v√† t·ªïng ti·ªÅn ban ƒë·∫ßu (th∆∞·ªùng l√† 'ship')
    handleDeliveryOptionChange(); 

    // ======================================================
    // üìÖ X·ª¨ L√ù CH·ªåN NG√ÄY GIAO H√ÄNG
    // ======================================================
    const dateButtons = document.querySelectorAll('.date-buttons .toggle-btn');
    const deliveryDate = document.getElementById('delivery_date');

    function formatDate(date) {
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}-${month}-${day}`;
    }

    dateButtons.forEach((button, index) => {
        button.addEventListener('click', () => {
            // B·ªè class active ·ªü t·∫•t c·∫£ n√∫t
            dateButtons.forEach(btn => btn.classList.remove('active'));
            // Th√™m class active v√†o n√∫t ƒë∆∞·ª£c ch·ªçn
            button.classList.add('active');

            // T√≠nh ng√†y t∆∞∆°ng ·ª©ng
            const today = new Date();
            today.setDate(today.getDate() + index); 

            // G√°n v√†o input date (·∫©n)
            deliveryDate.value = formatDate(today);
            console.log("ƒê√£ ch·ªçn ng√†y giao h√†ng:", deliveryDate.value);
        });
    });

    // Khi trang load l·∫ßn ƒë·∫ßu, t·ª± set "H√¥m nay"
    if (dateButtons.length > 0) {
        const today = new Date();
        deliveryDate.value = formatDate(today);
    }

    // ======================================================
    // üîÑ X·ª¨ L√ù C·∫¨P NH·∫¨T TR·∫†NG TH√ÅI N√öT (toggle-btn)
    // ======================================================
    function updateToggleButtons(selectedId) {
        const buttons = document.querySelectorAll('#delivery_option_buttons .toggle-btn');
        buttons.forEach(button => button.classList.remove('active'));

        if (selectedId === 'delivery_ship') {
            document.querySelector('#delivery_option_buttons button:first-child').classList.add('active');
        } else if (selectedId === 'delivery_pickup') {
            document.querySelector('#delivery_option_buttons button:last-child').classList.add('active');
        }
    }
    window.updateToggleButtons = updateToggleButtons; // G·∫Øn ra global scope


    // ======================================================
    // üí≥ X·ª¨ L√ù PH∆Ø∆†NG TH·ª®C THANH TO√ÅN
    // ======================================================
    const paymentRadios = document.querySelectorAll('input[name="payment_method"]');
    const creditCardDetails = document.getElementById('credit_card_info');

    function handlePaymentMethodChange() {
        if (creditCardDetails) creditCardDetails.style.display = 'none';

        const selectedValue = document.querySelector('input[name="payment_method"]:checked').value;

        if (selectedValue === 'card') {
            if (creditCardDetails) creditCardDetails.style.display = 'block';
        }
    }

    paymentRadios.forEach(function (radio) {
        radio.addEventListener('change', handlePaymentMethodChange);
    });

    handlePaymentMethodChange(); // Ch·∫°y h√†m 1 l·∫ßn khi t·∫£i trang

    // ======================================================
    // üë§ X·ª¨ L√ù T·ª∞ ƒê·ªòNG ƒêI·ªÄN TH√îNG TIN USER
    // ======================================================
    function getCurrentUser() {
        const userStr = localStorage.getItem('UserStr');
        return userStr ? JSON.parse(userStr) : null;
    }

    function autoFillForm() {
        const currentUser = getCurrentUser();
        if (!currentUser) return;

        if (currentUser.username) document.getElementById("full_name").value = currentUser.username;
        if (currentUser.phone) document.getElementById("phone").value = currentUser.phone;
        if (currentUser.address) document.getElementById("address").value = currentUser.address;
    }

    autoFillForm(); // ch·∫°y ngay khi m·ªü trang
    
    // ======================================================
    // ‚úÖ X·ª¨ L√ù N√öT "ƒê·∫∂T H√ÄNG" (VALIDATION)
    // ======================================================
    btn.addEventListener('click', function (e) {
        e.preventDefault(); // ngƒÉn reload

        const name = document.getElementById("full_name");
        const phone = document.getElementById("phone");
        const address = document.getElementById("address");
        const selectedDeliveryOption = document.querySelector('input[name="delivery_option"]:checked').value;
        const selectedPaymentMethod = document.querySelector('input[name="payment_method"]:checked').value;


        // üÖ∞Ô∏è VALIDATION CHO TH√îNG TIN NG∆Ø·ªúI NH·∫¨N & GIAO H√ÄNG
        let fields = [
            { field: name, message: "Vui l√≤ng nh·∫≠p t√™n ng∆∞·ªùi nh·∫≠n." },
            { field: phone, message: "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i." },
        ];

        if (selectedDeliveryOption === 'ship') {
            const date = document.querySelector("#delivery_date");
            fields.push(
                { field: address, message: "Vui l√≤ng nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng." },
                { field: date, message: "Vui l√≤ng ch·ªçn ng√†y giao h√†ng." }
            );
        }
        
        // üÖ±Ô∏è VALIDATION CHO TH√îNG TIN THANH TO√ÅN (N·∫æU CH·ªåN THANH TO√ÅN B·∫∞NG TH·∫∫)
        if (selectedPaymentMethod === 'card') {
            const bankName = document.getElementById("bank_name");
            const cardNumber = document.getElementById("card_number");
            const cardExpiry = document.getElementById("card_expiry");
            const cardCvv = document.getElementById("card_cvv");
            
            fields.push(
                { field: bankName, message: "Vui l√≤ng ch·ªçn ng√¢n h√†ng ph√°t h√†nh th·∫ª." },
                { field: cardNumber, message: "Vui l√≤ng nh·∫≠p s·ªë th·∫ª." },
                { field: cardExpiry, message: "Vui l√≤ng nh·∫≠p ng√†y h·∫øt h·∫°n c·ªßa th·∫ª." },
                { field: cardCvv, message: "Vui l√≤ng nh·∫≠p m√£ CVV c·ªßa th·∫ª." }
            );
        }
        
        // Ki·ªÉm tra tr∆∞·ªùng tr·ªëng
        const emptyFields = fields.filter(({ field }) => field && field.value.trim() === "");

        // Hi·ªÉn th·ªã l·ªói n·∫øu c√≥ tr∆∞·ªùng b·ªã b·ªè tr·ªëng
        if (emptyFields.length > 0) {
            showToast('error', 'L·ªói nh·∫≠p li·ªáu', emptyFields[0].message);
            return;
        }

        // N·∫øu h·ª£p l·ªá: 
        showToast('success', 'Th√†nh c√¥ng', "ƒê·∫∑t h√†ng th√†nh c√¥ng!");
    });
});